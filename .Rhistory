model <- zeroinfl(value ~ group|1, data = data)
model2 <- zeroinfl(value ~ group|group, data = data)
s_model2= summary(model2)
if (0.05 < s_model2$coefficients$zero[2,4]){
fin= model2}
else {fin=model}
AIC=-2*(fin$loglik)+2*fin$df.residual
return(fin)
}
zero_model(zip,"Trt","Resp")
zero_model=function(data,group,value){
group<-data[group][[1]]
value<-data[value][[1]]
model <- zeroinfl(value ~ group|1, data = data)
model2 <- zeroinfl(value ~ group|group, data = data)
s_model2= summary(model2)
if (0.05 < s_model2$coefficients$zero[2,4]){
fin= model2}
else {fin=model}
AIC=-2*(fin$loglik)+2*fin$df.residual
return(fin,AIC)
}
zero_model(zip,"Trt","Resp")
zero_model=function(data,group,value){
group<-data[group][[1]]
value<-data[value][[1]]
model <- zeroinfl(value ~ group|1, data = data)
model2 <- zeroinfl(value ~ group|group, data = data)
s_model2= summary(model2)
if (0.05 < s_model2$coefficients$zero[2,4]){
fin= model2}
else {fin=model}
AIC=-2*(fin$loglik)+2*fin$df.residual
final=list(model=fin,aic=AIC)
return(final)
}
zero_model(zip,"Trt","Resp")
a<-zero_model(zip,"Trt","Resp")
summary(a$model)
zero_model=function(data,group,value){
group<-data[group][[1]]
value<-data[value][[1]]
model <- zeroinfl(value ~ group|1, data = data)
model2 <- zeroinfl(value ~ group|group, data = data)
s_model2= summary(model2)
if (0.05 < s_model2$coefficients$zero[2,4]){
fin= model2}
else {fin=model}
AIC=-2*(fin$loglik)+2*fin$df.residual
final=list(model=summary(fin),aic=AIC)
return(final)
}
a<-zero_model(zip,"Trt","Resp")
zero_model(zip,"Trt","Resp")
nd=data.frame(Trt=c("A","B"))
predict(model.zip,newdata=nd,type="count")
data.frame(Trt=c("A","B"))
group
unique(group)
data.frame(group=unique(group))
zero_model=function(data,group,value){
group<-data[group][[1]]
value<-data[value][[1]]
model <- zeroinfl(value ~ group|1, data = data)
model2 <- zeroinfl(value ~ group|group, data = data)
s_model2= summary(model2)
if (0.05 < s_model2$coefficients$zero[2,4]){
fin= model2}
else {fin=model}
AIC=-2*(fin$loglik)+2*fin$df.residual
nd=data.frame(group=unique(group))
pred=predict(fin,newdata=nd,type="count")
final=list(model=summary(fin),aic=AIC,predict=pred)
return(final)
}
zero_model(zip,"Trt","Resp")
setwd("C:/Users/gkswj/Desktop/zeroInf")
document()
library(zeroInf)
data(zip)
data("zip")
zeroInf::data("zip")
library(zeroInf)
library(zeroInf)
data(zip)
setwd("C:/Users/gkswj/Desktop/zeroInf")
document()
data(zip)
#예제 데이터 추가
setwd("C:\\Users\\gkswj\\Desktop\\삭제")
zip <-read.table("data.zip.txt")
setwd("C:/Users/gkswj/Desktop/zeroInf")
setwd("C:/Users/gkswj/Desktop")
zero_mean(zip,"Trt","Resp")
value="Resp"
get("Resp")
zero_mean=function(data,group,value)
{
mu <- ddply(data, .(get(group)), summarise, gr.mean=mean(get(value)))
return(mu)
}
#예제 데이터 추가
setwd("C:\\Users\\gkswj\\Desktop\\삭제")
zip <-read.table("data.zip.txt")
setwd("C:/Users/gkswj/Desktop")
library(zeroInf)
zero_mean(zip,"Trt","Resp")
value="Resp"
get("Resp")
zero_mean(iris,"Species","Sepal.Length")
zero_mean(zip,"Trt","Resp")
zero_box(zip,"Trt","Resp")
zero_hist(zip,"Trt","Resp")
zero_model(zip,"Trt","Resp")
data(zip)
library(zeroInf)
library(pscl)
library(devtools)
library(roxygen2)
#예제 데이터 추가
setwd("C:\\Users\\gkswj\\Desktop\\삭제")
setwd("C:/Users/gkswj/Desktop/zeroInf")
library(zeroInf)
setwd("C:/Users/gkswj/Desktop/zeroInf")
document()
library(zeroInf)
data(zip)
setwd("..")
install("zeroInf")
library("zeroInf")
data(zip)
#예제 데이터 추가
setwd("C:\\Users\\gkswj\\Desktop\\삭제")
zip <-read.table("data.zip.txt")
save(zip,file = "C:/Users/gkswj/Desktop/zeroInf/data/zip.rda")
rm(zip)
setwd("C:/Users/gkswj/Desktop/zeroInf")
document()
library(zeroInf)
data("zip")
zero_mean(zip,"Trt","Resp")
library(plyr)
zero_mean(zip,"Trt","Resp")
value="Resp"
zero_mean(zip,"Trt","Resp")
zero_box(zip,"Trt","Resp")
library(ggplot2)
zero_box(zip,"Trt","Resp")
zero_hist=function(data,group,value){
mu <- ddply(data, .(get(group)), summarise, gr.mean=mean(get(value)))
value<-data[value][[1]]
group<-data[group][[1]]
ggplot(data, aes(x=value, color=group))+
geom_histogram(binwidth = 1,fill="white",position = "dodge")+
geom_vline(data=mu, aes(xintercept=gr.mean, color=mu[,1]),
linetype="dashed")+
theme(legend.position = "top")
}
zero_hist(zip,"Trt","Resp")
zero_model(zip,"Trt","Resp")
library("countreg")
install.packages("countreg")
install.packages("countreg", repos = "http://R-Forge.R-project.org")
#install.packages("countreg", repos = "http://R-Forge.R-project.org")
library("countreg")
library("MASS")
library(MASS)
#install.packages("countreg", repos = "http://R-Forge.R-project.org")
library(countreg)
library("zeroInf")
data(zip)
rootogram(zip, main = "ZIP", ylim = c(-5, 15), max = 50)
model.zip <- zeroinfl(Resp ~ Trt|1, data = zip)
rootogram(zodel.zipip, main = "ZIP", ylim = c(-5, 15), max = 50)
rootogram(zodel.zip, main = "ZIP", ylim = c(-5, 15), max = 50)
model.zip <- zeroinfl(Resp ~ Trt|1, data = zip)
rootogram(model.zip, main = "ZIP", ylim = c(-5, 15), max = 50)
qqrplot(model.zip,min="model1")
a<-qqrplot(model.zip,min="model1")
list(a)
b<-list(a)
b$a
b
a
zero_model=function(data,group,value){
group<-data[group][[1]]
value<-data[value][[1]]
m.intercept <- zeroinfl(value ~ group|1, data = data)
m.group <- zeroinfl(value ~ group|group, data = data)
rootogram( m.intercept, main = "group|1")
rootogram( m.group, main = "group|group")
}
#' @param group Group variable in the data
#' @param value Numeric variable in the data
#'
#' @importFrom pscl zeroinfl
#' @importFrom coutreg rootogram
#'
#' @export
#'
#' @examples zero_rootgram(data=zip, group="Trt", value="Resp")
#'
zero_rootgram=function(data,group,value){
group<-data[group][[1]]
value<-data[value][[1]]
m.intercept <- zeroinfl(value ~ group|1, data = data)
m.group <- zeroinfl(value ~ group|group, data = data)
rootogram( m.intercept, main = "group|1")
rootogram( m.group, main = "group|group")
}
zero_rootgram(data=zip, group="Trt", value="Resp")
par(mfrow=c(1,2))
#' @param value Numeric variable in the data
#'
#' @importFrom pscl zeroinfl
#' @importFrom graphics par
#' @importFrom coutreg rootogram
#'
#' @export
#'
#' @examples zero_rootgram(data=zip, group="Trt", value="Resp")
#'
zero_rootgram=function(data,group,value){
group<-data[group][[1]]
value<-data[value][[1]]
m.intercept <- zeroinfl(value ~ group|1, data = data)
m.group <- zeroinfl(value ~ group|group, data = data)
par(mfrow=c(1,2))
rootogram( m.intercept, main = "group|1")
rootogram( m.group, main = "group|group")
}
zero_rootgram(data=zip, group="Trt", value="Resp")
#' @param value Numeric variable in the data
#'
#' @importFrom pscl zeroinfl
#' @importFrom graphics par
#' @importFrom coutreg rootogram
#'
#' @export
#'
#' @examples zero_rootgram(data=zip, group="Trt", value="Resp")
#'
zero_rootgram=function(data,group,value){
group<-data[group][[1]]
value<-data[value][[1]]
m.intercept <- zeroinfl(value ~ group|1, data = data)
m.group <- zeroinfl(value ~ group|group, data = data)
m.neg <- zeroinfl(value ~ group|group,dist = "negbin", data = data)
par(mfrow=c(1,2))
rootogram( m.intercept, main = "group|1")
rootogram( m.group, main = "group|group")
rootogram( m.neg, main = "negbin")
}
zero_rootgram(data=zip, group="Trt", value="Resp")
#' @param value Numeric variable in the data
#'
#' @importFrom pscl zeroinfl
#' @importFrom graphics par
#' @importFrom coutreg rootogram
#'
#' @export
#'
#' @examples zero_rootgram(data=zip, group="Trt", value="Resp")
#'
zero_rootgram=function(data,group,value){
group<-data[group][[1]]
value<-data[value][[1]]
m.intercept <- zeroinfl(value ~ group|1, data = data)
m.group <- zeroinfl(value ~ group|group, data = data)
m.neg <- zeroinfl(value ~ group|group,dist = "negbin", data = data)
par(mfrow=c(1,3))
rootogram( m.intercept, main = "group|1")
rootogram( m.group, main = "group|group")
rootogram( m.neg, main = "negbin")
}
zero_rootgram(data=zip, group="Trt", value="Resp")
#' @param value Numeric variable in the data
#'
#' @importFrom pscl zeroinfl
#' @importFrom graphics par
#' @importFrom coutreg rootogram
#'
#' @export
#'
#' @examples zero_rootgram(data=zip, group="Trt", value="Resp")
#'
zero_rootgram=function(data,group,value){
group<-data[group][[1]]
value<-data[value][[1]]
m.intercept <- zeroinfl(value ~ group|1, data = data)
m.group <- zeroinfl(value ~ group|group, data = data)
m.neg <- zeroinfl(value ~ group,dist = "negbin", data = data)
par(mfrow=c(1,3))
rootogram( m.intercept, main = "group|1")
rootogram( m.group, main = "group|group")
rootogram( m.neg, main = "negbin")
}
zero_rootgram(data=zip, group="Trt", value="Resp")
#' @param value Numeric variable in the data
#'
#' @importFrom pscl zeroinfl
#' @importFrom graphics par
#' @importFrom coutreg rootogram
#'
#' @export
#'
#' @examples zero_rootgram(data=zip, group="Trt", value="Resp")
#'
zero_rootgram=function(data,group,value){
group<-data[group][[1]]
value<-data[value][[1]]
m.intercept <- zeroinfl(value ~ group|1, data = data)
m.group <- zeroinfl(value ~ group|group, data = data)
par(mfrow=c(1,2))
rootogram( m.intercept, main = "group|1")
rootogram( m.group, main = "group|group")
}
zero_rootgram(data=zip, group="Trt", value="Resp")
#' @param group Group variable in the data
#' @param value Numeric variable in the data
#'
#' @importFrom pscl zeroinfl
#' @importFrom graphics par
#'
#' @export
#'
#' @examples zero_count(data=zip, group="Trt", value="Resp")
#'
zero_count=function(data,group,value){
group<-data[group][[1]]
value<-data[value][[1]]
par(mfrow=c(1,2))
plot(factor(value > 0, levels = c(FALSE, TRUE), labels = c("=0", ">0")) ~ group,
data = data, ylab = "count", main = "Zero hurdle")
plot(value ~ group, data = data, subset = count > 0,
log = "y", main = "Count of positive")
}
zero_count(data=zip, group="Trt", value="Resp")
#' zero_count
#'
#' @param data Input data
#' @param group Group variable in the data
#' @param value Numeric variable in the data
#'
#' @importFrom pscl zeroinfl
#' @importFrom graphics par
#'
#' @export
#'
#' @examples zero_count(data=zip, group="Trt", value="Resp")
#'
zero_count=function(data,group,value){
group<-data[group][[1]]
value<-data[value][[1]]
par(mfrow=c(1,2))
plot(factor(value > 0, levels = c(FALSE, TRUE), labels = c("=0", ">0")) ~ group,
data = data, ylab = "count", main = "Zero hurdle")
plot(value ~ group, data = data, subset = Resp > 0,
log = "y", main = "Count of positive")
}
zero_count(data=zip, group="Trt", value="Resp")
setwd("..")
setwd("C:/Users/gkswj/Desktop/zeroInf")
document()
library(devtools)
library(roxygen2)
setwd("C:/Users/gkswj/Desktop/zeroInf")
document()
setwd("..")
install("zeroInf")
library("zeroInf")
data(zip)
library("zeroInf")
data(zip)
#예제 데이터 추가
setwd("C:\\Users\\gkswj\\Desktop\\삭제")
zip <-read.table("data.zip.txt")
save(zip,file = "C:/Users/gkswj/Desktop/zeroInf/data/zip.rda")
rm(zip)
setwd("C:/Users/gkswj/Desktop/zeroInf")
document()
library(zeroInf)
data("zip")
zero_mean(iris,"Species","Sepal.Length")
value="Resp"
zero_mean(iris,"Species","Sepal.Length")
get("Resp")
zero_mean(iris,"Species","Sepal.Length")
data("zip")
value="Resp"
get("Resp")
zero_mean(iris,"Species","Sepal.Length")
zero_mean(zip,"Trt","Resp")
value="Resp"
get("Resp")
zero_mean(iris,"Species","Sepal.Length")
library(first)
cool_summary(iris,"Species","Sepal.Length")
zero_mean(iris,"Species","Sepal.Length")
get("Sepal.Length")
zero_mean(iris,"Species","Sepal.Length")
cool_summary(iris,"Species","Sepal.Length")
value="Sepal.Length"
get("Sepal.Length")
data("iris")
value="Sepal.Length"
get("Sepal.Length")
zero_mean(iris,"Species","Sepal.Length")
zero_box(zip,"Trt","Resp")
library(ggplot2)
zero_box(zip,"Trt","Resp")
zero_hist(zip,"Trt","Resp")
value="Resp"
zero_hist(zip,"Trt","Resp")
zero_hist=function(data,group,value){
value<-value
mu <- ddply(data, .(get(group)), summarise, gr.mean=mean(get(value)))
value<-data[value][[1]]
group<-data[group][[1]]
ggplot(data, aes(x=value, color=group))+
geom_histogram(binwidth = 1,fill="white",position = "dodge")+
geom_vline(data=mu, aes(xintercept=gr.mean, color=mu[,1]),
linetype="dashed")+
theme(legend.position = "top")
}
#value="Resp"
zero_hist(zip,"Trt","Resp")
zero_mean=function(data,group,value)
{
value<-value
mu <- ddply(data, .(get(group)), summarise, gr.mean=mean(get(value)))
return(mu)
}
value="d"
zero_mean=function(data,group,value)
{
value<-value
mu <- ddply(data, .(get(group)), summarise, gr.mean=mean(get(value)))
return(mu)
}
library(plyr)
zero_mean(zip,"Trt","Resp")
value="Resp"
value="d"
zero_mean=function(data,group,value)
{
value<-value
mu <- ddply(data, .(get(group)), summarise, gr.mean=mean(get(value)))
return(mu)
}
library(plyr)
zero_mean(zip,"Trt",value="Resp")
value="value"
zero_model=function(data,group,value){
group<-data[group][[1]]
value<-data[value][[1]]
model <- zeroinfl(value ~ group|1, data = data)
model2 <- zeroinfl(value ~ group|group, data = data)
s_model2= summary(model2)
if (0.05 < s_model2$coefficients$zero[2,4]){
fin= model2}
else {fin=model}
AIC=-2*(fin$loglik)+2*fin$df.residual
nd=data.frame(group=unique(group))
pred=predict(fin,newdata=nd,type="count")
final=list(model=summary(fin),aic=AIC,predict=pred)
return(final)
}
zero_model(zip,"Trt","Resp")
zero_box(zip,"Trt","Resp")
library(plyr)
zero_mean(zip,"Trt",value="Resp")
#안될땐 다음 문장 수행
data("zip")
value="value"
zero_mean(zip,"Trt",value="Resp")
zero_mean(zip,"Trt","Resp")
zero_mean=function(data,group,value)
{
mu <- ddply(data, .(get(group)), summarise, gr.mean=mean(get(value)))
return(mu)
}
library(plyr)
zero_mean(zip,"Trt","Resp")
#안될땐 다음 문장 수행
data("zip")
value="value"
get("Resp")
value="Resp"
get("Resp")
zero_mean=function(data,group,value)
{
mu <- ddply(data, .(get(group)), summarise, gr.mean=mean(get(value)))
return(mu)
}
library(plyr)
zero_mean(zip,"Trt","Resp")
library(plyr)
zero_box(zip,"Trt","Resp")
#value="Resp"
zero_hist(zip,"Trt","Resp")
value="Resp"
#value="Resp"
zero_hist(zip,"Trt","Resp")
zero_model(zip,"Trt","Resp")
zero_rootgram(data=zip, group="Trt", value="Resp")
zero_count(data=zip, group="Trt", value="Resp")
setwd("C:/Users/gkswj/Desktop/zeroInf")
document()
setwd("..")
install("zeroInf")
library(zeroInf)
